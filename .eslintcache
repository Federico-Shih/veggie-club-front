[{"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\index.js":"1","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\landing.js":"2","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu-components\\menu.js":"3","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu-components\\calls.js":"4","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\landing.styled.js":"5","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu-components\\menu.styled.js":"6","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\components\\utilities.js":"7","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\App.js":"8","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\theme.js":"9"},{"size":410,"mtime":1611933579742,"results":"10","hashOfConfig":"11"},{"size":9538,"mtime":1611933624896,"results":"12","hashOfConfig":"11"},{"size":9741,"mtime":1611933613494,"results":"13","hashOfConfig":"11"},{"size":955,"mtime":1611885435042,"results":"14","hashOfConfig":"11"},{"size":3958,"mtime":1611611778183,"results":"15","hashOfConfig":"11"},{"size":6228,"mtime":1611933618964,"results":"16","hashOfConfig":"11"},{"size":1102,"mtime":1611933514415,"results":"17","hashOfConfig":"11"},{"size":630,"mtime":1611933523713,"results":"18","hashOfConfig":"11"},{"size":295,"mtime":1611933538346,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1yyaz3l",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\index.js",[],["42","43","44","45","46"],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\landing.js",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu-components\\menu.js",["47","48"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Switch, Route, useHistory, useLocation } from \"react-router-dom\";\nimport withSizes from \"react-sizes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCog,\n  faThList,\n  faWindowClose,\n  faArrowLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from \"prop-types\";\nimport { SyncLoader } from \"react-spinners\";\nimport { Button } from \"@material-ui/core\";\n\nimport Smologo from \"../img/short-logo.png\";\nimport Logo from \"../img/logo.png\";\nimport { ThemeContext } from \"../theme\";\nimport { login, getCategories, getFoods } from \"./calls\";\nimport {\n  Header,\n  InputStyle,\n  LoginContainer,\n  SwitchButton,\n  CategoryButton,\n  CategoriesContainer,\n  CategoriesImageContainer,\n  FoodsSection,\n  FoodThumbnail,\n  FoodImageThumbnail,\n  FoodNameThumbnail,\n  FoodPadding,\n} from \"./menu.styled\";\nimport { FocusShadow, LoaderWrapper } from \"../components/utilities\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\n// Both versions of the menu\nfunction NormalMenu({ mobile }) {\n  const [loadingCategory, setLoadingCategory] = useState(false);\n  const [loadingFoods, setLoadingFoods] = useState(false);\n\n  const [showedFood, setShowedFood] = useState({\n    name: null,\n    id: \"null\",\n    description: null,\n    img: null,\n  });\n  const [categories, setCategories] = useState([]);\n  const [foods, setFoods] = useState([]);\n\n  const history = useHistory();\n  const { pathname: path } = useLocation();\n\n  const categoryClickHandler = async (category) => {\n    setLoadingFoods(true);\n    history.push(`${path}?categoria=${category}`);\n    const foodCall = await getFoods(category, new Date().getDay());\n    setFoods(foodCall);\n    setLoadingFoods(false);\n  };\n\n  useEffect(async () => {\n    setLoadingCategory(true);\n    const categoryList = await getCategories();\n    if (categoryList.length !== 0) {\n      setCategories(categoryList);\n      if (categoryList.length !== 0) {\n        const category = categoryList[0].text;\n        if (!mobile) {\n          categoryClickHandler(category);\n        }\n      }\n    }\n    setLoadingCategory(false);\n  }, []);\n\n  const selectedCategory = useQuery().get(\"categoria\");\n\n  const CategorySection = ({ theme }) => (\n    <CategoriesContainer color={theme.primary}>\n      <div style={{ marginTop: \"10px\" }}>CATEGORÍAS</div>\n      {mobile ? (\n        <hr\n          style={{\n            color: \"black\",\n            width: \"80%\",\n          }}\n        />\n      ) : null}\n      <LoaderWrapper\n        Loader={<SyncLoader size={10} style={{ top: \"50%\" }} />}\n        loading={loadingCategory}\n      >\n        <CategoriesImageContainer>\n          {categories.length !== 0 ? (\n            categories.map(({ text: category, img }) => {\n              return (\n                <CategoryButton\n                  onClick={() => {\n                    categoryClickHandler(category);\n                  }}\n                  key={category}\n                  src={img}\n                  active={category === selectedCategory}\n                >\n                  <div\n                    style={\n                      mobile\n                        ? {\n                            color: \"white\",\n                            fontSize: \"25px\",\n                            fontWeight: 500,\n                          }\n                        : {}\n                    }\n                  >\n                    {category}\n                  </div>\n                </CategoryButton>\n              );\n            })\n          ) : (\n            <div\n              style={\n                mobile\n                  ? { textAlign: \"center\" }\n                  : { fontSize: \"16px\", textAlign: \"center\", marginTop: \"20px\" }\n              }\n            >\n              No hay categorías todavía\n            </div>\n          )}\n        </CategoriesImageContainer>\n      </LoaderWrapper>\n      <FocusShadow active={showedFood.id} setActive={setShowedFood}>\n        <div>hi</div>\n      </FocusShadow>\n    </CategoriesContainer>\n  );\n\n  CategorySection.propTypes = {\n    theme: PropTypes.shape({\n      primary: PropTypes.string,\n    }),\n  };\n\n  CategorySection.defaultProps = {\n    theme: {\n      primary: \"white\",\n    },\n  };\n\n  return (\n    <ThemeContext.Consumer>\n      {(theme) => (\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          {!mobile || (mobile && !selectedCategory) ? (\n            <CategorySection theme={theme} />\n          ) : null}\n          {!mobile || (mobile && selectedCategory) ? (\n            <FoodsSection>\n              <LoaderWrapper\n                Loader={<SyncLoader size={10} style={{ top: \"50%\" }} />}\n                loading={loadingFoods}\n              >\n                <>\n                  {foods.length !== 0 ? (\n                    foods.map(({ name, description, img, id }) => (\n                      <FoodPadding key={id}>\n                        <FoodThumbnail>\n                          <FoodImageThumbnail src={img} />\n                          <FoodNameThumbnail>{name}</FoodNameThumbnail>\n                        </FoodThumbnail>\n                      </FoodPadding>\n                    ))\n                  ) : (\n                    <div>No hay comida para esta categoria</div>\n                  )}\n                </>\n              </LoaderWrapper>\n            </FoodsSection>\n          ) : null}\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n}\n\nNormalMenu.propTypes = {\n  mobile: PropTypes.bool.isRequired,\n};\n\nfunction AdminMenu({ mobile }) {\n  console.log(mobile);\n  return (\n    <div>\n      admin menu\n      {mobile}\n    </div>\n  );\n}\n\nAdminMenu.propTypes = {\n  mobile: PropTypes.bool.isRequired,\n};\n\n// Menu with the router switch and header\n\nfunction Menu({ mobile }) {\n  const [admin, setAdmin] = useState(false);\n  const [loggingIn, setLog] = useState(false);\n  const [username, setUser] = useState(\"\");\n  const [password, setPass] = useState(\"\");\n\n  const history = useHistory();\n  const { pathname: path } = useLocation();\n  useEffect(() => {\n    if (path === \"/menu\") {\n      setAdmin(false);\n    }\n  }, [path]);\n\n  const setLogin = (status) => {\n    if (!status) {\n      setUser(\"\");\n      setPass(\"\");\n    }\n    setLog(status);\n  };\n\n  const switchAdmin = () => {\n    if (admin) {\n      history.goBack();\n      setAdmin(false);\n    } else {\n      setLogin(true);\n    }\n  };\n\n  const handleChange = (setter) => {\n    return ({ target }) => {\n      setter(target.value);\n    };\n  };\n\n  const validate = () => {\n    if (\n      username.trim() !== \"\" &&\n      password.trim() !== \"\" &&\n      password.trim().length >= 8\n    ) {\n      login({ user: username, password }).then((result) => {\n        if (result) {\n          setAdmin(true);\n          history.push(`${path}/settings`);\n          setLogin(false);\n          setUser(\"\");\n          setPass(\"\");\n        }\n      });\n    }\n  };\n\n  const searchQuery = useQuery().get(\"categoria\");\n\n  return (\n    <ThemeContext.Consumer>\n      {(theme) => (\n        <>\n          <Header color={theme.secondary}>\n            <Link to={searchQuery && mobile ? \"/menu\" : \"/\"}>\n              {searchQuery && mobile ? (\n                <FontAwesomeIcon\n                  icon={faArrowLeft}\n                  size=\"2x\"\n                  style={{ margin: \"8px\" }}\n                  color=\"black\"\n                />\n              ) : (\n                <img\n                  src={mobile ? Smologo : Logo}\n                  alt=\"logo\"\n                  height={mobile ? 40 : 35}\n                  style={{ marginLeft: \"10px\" }}\n                />\n              )}\n            </Link>\n            <div\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                transform: \"translate(-50%, 0)\",\n                fontSize: \"30px\",\n                fontWeight: 500,\n              }}\n            >\n              {admin ? \"ADMINISTRADOR\" : \"MENU\"}\n            </div>\n            <SwitchButton\n              icon={!admin ? faCog : faThList}\n              onClick={switchAdmin}\n            />\n          </Header>\n          <Switch>\n            <Route exact path=\"/menu/settings\">\n              <AdminMenu mobile={mobile} />\n            </Route>\n            <Route exact path=\"/menu\">\n              <NormalMenu mobile={mobile} />\n            </Route>\n          </Switch>\n          <LoginContainer active={loggingIn}>\n            <img\n              src={Logo}\n              alt=\"logo\"\n              height={40}\n              style={{ marginTop: \"10px\" }}\n            />\n            <InputStyle\n              name=\"username\"\n              onChange={handleChange(setUser)}\n              value={username}\n              variant=\"outlined\"\n              label=\"Nombre de usuario\"\n              size=\"small\"\n              margin=\"normal\"\n            />\n\n            <InputStyle\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange(setPass)}\n              variant=\"outlined\"\n              label=\"Contraseña\"\n              value={password}\n              size=\"small\"\n              margin=\"normal\"\n            />\n\n            <Button variant=\"contained\" onClick={validate}>\n              Loguearse\n            </Button>\n            <FontAwesomeIcon\n              icon={faWindowClose}\n              style={{ position: \"absolute\", right: 0, margin: \"15px\" }}\n              onClick={() => {\n                setLogin(false);\n              }}\n            />\n          </LoginContainer>\n        </>\n      )}\n    </ThemeContext.Consumer>\n  );\n}\n\nMenu.propTypes = {\n  mobile: PropTypes.bool.isRequired,\n};\n\nconst mapSizestoProps = ({ width }) => ({\n  mobile: width < 600,\n});\n\nexport default withSizes(mapSizestoProps)(Menu);\n","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu-components\\calls.js",["49","50"],"import { v4 as uuid } from \"uuid\";\nimport placeholder from \"../img/placeholder.jpg\";\n\n// Food {\n//   name,\n//   description,\n//   img\n// }\n\nexport const login = ({ user, password }) => {\n  console.log(user, password);\n  return new Promise((resolve) => {\n    resolve(true);\n  });\n};\n\nexport const getCategories = () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve([\n        { text: \"hola\", img: placeholder },\n        { text: \"holas\", img: placeholder },\n        { text: \"holass\", img: placeholder },\n        { text: \"holasssw\", img: placeholder },\n      ]);\n    }, 0);\n  });\n};\n\nexport const getFoods = (category, day) => {\n  console.log(category, day);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(\n        Array.from({ length: 20 }).map(() => ({\n          name: \"adsasd\",\n          description: \"fuuuu\",\n          img: placeholder,\n          id: uuid(),\n        }))\n      );\n    }, 0);\n  });\n};\n","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\landing.styled.js",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu-components\\menu.styled.js",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\components\\utilities.js",["51"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { ButtonBase, styled } from \"@material-ui/core\";\n\nimport { ImageShadow } from \"../menu-components/menu.styled\";\n\nexport const LoaderWrapper = ({ Loader, loading, children }) => {\n  return <>{loading ? Loader : children}</>;\n};\n\nLoaderWrapper.propTypes = {\n  Loader: PropTypes.element.isRequired,\n  loading: PropTypes.bool.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nconst CloseIcon = styled(FontAwesomeIcon)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin: 20px;\n`;\n\nexport const FocusShadow = ({ active, setActive, children }) => {\n  if (active) {\n    return (\n      <ImageShadow onClick={() => setActive(false)}>\n        <CloseIcon color=\"white\" icon={faTimes} />\n        {children}\n      </ImageShadow>\n    );\n  }\n  return <></>;\n};\n\nFocusShadow.propTypes = {\n  active: PropTypes.bool.isRequired,\n  setActive: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\App.js",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\theme.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":170,"column":40,"nodeType":"64","messageId":"65","endLine":170,"endColumn":51},{"ruleId":"66","severity":1,"message":"67","line":196,"column":3,"nodeType":"68","messageId":"69","endLine":196,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":11,"column":3,"nodeType":"68","messageId":"69","endLine":11,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":31,"column":3,"nodeType":"68","messageId":"69","endLine":31,"endColumn":14},{"ruleId":"62","severity":1,"message":"70","line":5,"column":10,"nodeType":"64","messageId":"65","endLine":5,"endColumn":20},"lines-around-directive",["71"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'description' is defined but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected","'ButtonBase' is defined but never used.","padding-line-between-statements"]