[{"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\index.js":"1","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\App.tsx":"2","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\theme.ts":"3","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\types.ts":"4","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\events.ts":"5","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\landing.tsx":"6","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\menu.tsx":"7","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\errors.ts":"8","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\api.ts":"9","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\hooks.ts":"10","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\landing.styles.tsx":"11","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\menu.components.tsx":"12","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\components\\utilities.tsx":"13","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\menu.styles.tsx":"14"},{"size":414,"mtime":1612498986714,"results":"15","hashOfConfig":"16"},{"size":1694,"mtime":1613509939620,"results":"17","hashOfConfig":"16"},{"size":277,"mtime":1612996157742,"results":"18","hashOfConfig":"16"},{"size":805,"mtime":1613509939629,"results":"19","hashOfConfig":"16"},{"size":405,"mtime":1613509939621,"results":"20","hashOfConfig":"16"},{"size":8604,"mtime":1613613994095,"results":"21","hashOfConfig":"16"},{"size":31296,"mtime":1613509939624,"results":"22","hashOfConfig":"16"},{"size":352,"mtime":1612996157741,"results":"23","hashOfConfig":"16"},{"size":6366,"mtime":1613509939622,"results":"24","hashOfConfig":"16"},{"size":1345,"mtime":1613509939622,"results":"25","hashOfConfig":"16"},{"size":5501,"mtime":1613613905735,"results":"26","hashOfConfig":"16"},{"size":18503,"mtime":1613509939623,"results":"27","hashOfConfig":"16"},{"size":974,"mtime":1612498986702,"results":"28","hashOfConfig":"16"},{"size":8821,"mtime":1613509939624,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lfpdm",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\index.js",[],[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\App.tsx",[],[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\theme.ts",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\types.ts",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\events.ts",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\landing.tsx",["62","63"],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\menu.tsx",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\errors.ts",["64"],"export class CategoryNotSavedError extends Error {\n  constructor(text = \"\") {\n    super(text);\n  }\n}\n\nexport class FoodNotSavedError extends Error {\n  constructor(text = \"\") {\n    super(text);\n  }\n}\n\nexport class CustomError extends Error {\n  public status;\n\n  constructor(message = \"\", code: number) {\n    super(message);\n    this.status = code;\n  }\n}","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\api.ts",["65"],"import axios from \"axios\";\nimport { Category, Day, Food } from \"../types\";\nimport { CustomError } from './errors';\n\nconst serverURL = process.env.REACT_APP_API_URL || \"http://localhost:3000\";\n\naxios.defaults.baseURL = serverURL;\n// axios.defaults.headers[\"Content-Type\"] = ;\n\naxios.defaults.withCredentials = true;\naxios.defaults.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\nconst tinify = (image: string) => {\n  const imagePath = image.split(\".\");\n  return `${imagePath[0]}.tiny.${imagePath[1]}`;\n};\n\nexport const padImage = (imageEndpoint: string, tiny = false): string => {\n  return `${serverURL}${tiny ? tinify(imageEndpoint) : imageEndpoint}`;\n};\n\nconst addNameToBlob = (blob: Blob, name: string) =>\n  `${name}.${blob.type.split(\"/\")[1]}`;\n\nexport const login = async ({\n  user,\n  password,\n}: {\n  user: string;\n  password: string;\n}): Promise<boolean> => {\n  const params = new URLSearchParams();\n  params.append(\"username\", user);\n  params.append(\"password\", password);\n  const res = await axios.post(\"/login\", params, { withCredentials: true });\n  if (res.data.code) {\n    throw new CustomError(\"Error ingresando\", 401);\n  }\n  return Promise.resolve(res.status === 200);\n};\n\nexport const getCategories = async (): Promise<Category[]> => {\n  const categories = await axios.get(\"/categories\");\n  const parsedCategories = categories.data.map(\n    (category: { name: string; image: string; _id?: string }) => {\n      const newCategory = {\n        name: category.name,\n        image: padImage(category.image, true),\n        id: category._id,\n      };\n      return newCategory;\n    }\n  );\n\n  return Promise.resolve(parsedCategories);\n};\n\nexport const getFoodsByDayAndCategory = async (\n  categoryId: string,\n  day?: Day\n): Promise<Food[]> => {\n  const res = await axios.get(\"/foods\", {\n    params: {\n      categoryId,\n      day,\n    },\n  });\n\n  const newFoods = res.data.foods.map(\n    (food: {\n      categoryId: string;\n      days: Day[];\n      description: string;\n      image: string;\n      name: string;\n      visible: boolean;\n      _id?: string;\n    }) => {\n      const newFood = {\n        ...food,\n        id: food._id,\n        image: padImage(food.image),\n      };\n      delete newFood._id;\n      return newFood;\n    }\n  );\n\n  return Promise.resolve(newFoods);\n};\n\nexport const createCategory = async (\n  categoryName: string,\n  image: string\n): Promise<Category> => {\n  const data = new FormData();\n\n  const imageData = await fetch(image);\n  const imageBlob = await imageData.blob();\n\n  data.append(\"name\", categoryName);\n  data.append(\"image\", imageBlob, addNameToBlob(imageBlob, categoryName));\n\n  const res = await axios.post(\"/category/add\", data);\n\n  if (res.data?.code === 409) {\n    throw new CustomError(\"Categoría duplicada\", 409);\n  }\n\n  const newCategory = {\n    id: res.data._id,\n    name: res.data.name,\n    image: padImage(res.data.image, true),\n  };\n  return Promise.resolve(newCategory);\n};\n\nexport const modifyCategory = async ({\n  name,\n  image,\n  id,\n}: {\n  name: string;\n  image?: string;\n  id: string;\n}): Promise<Category> => {\n  const data = new FormData();\n  if (image) {\n    const imageData = await fetch(image);\n    const imageBlob = await imageData.blob();\n    data.append(\"image\", imageBlob, addNameToBlob(imageBlob, name));\n  }\n  if (name) {\n    data.append(\"name\", name);\n  }\n  data.append(\"id\", id);\n  const res = await axios.patch(\"/category/edit\", data);\n  if (res.data?.code === 409) {\n    throw new CustomError(\"Categoría duplicada\", 409);\n  }\n\n  const editedCategory = {\n    image: padImage(res.data.image, true),\n    id: res.data._id,\n    name: res.data.name,\n  };\n\n  return Promise.resolve(editedCategory);\n};\n\nexport const createFood = async (\n  {\n    name,\n    description,\n    image,\n    days,\n    visible,\n  }: {\n    name: string;\n    description: string;\n    image: string;\n    days: Day[];\n    visible: boolean;\n  },\n  categoryId: string\n): Promise<Food> => {\n  const data = new FormData();\n  data.append(\"name\", name);\n  if (description) {\n    data.append(\"description\", description);\n  }\n  const imageData = await fetch(image);\n  const imageBlob = await imageData.blob();\n  data.append(\"image\", imageBlob, addNameToBlob(imageBlob, name));\n  data.append(\"days\", JSON.stringify(days));\n  data.append(\"categoryId\", categoryId);\n  data.append(\"visible\", JSON.stringify(visible));\n\n  const res = await axios.post(\"/food/add\", data);\n\n  if (res.data?.code === 409) {\n    throw new CustomError(\"Comida duplicada\", 409);\n  }\n\n  const newFood = {\n    name: res.data.name,\n    days: res.data.days,\n    description: res.data.description,\n    image: padImage(res.data.image),\n    visible: res.data.visible,\n    id: res.data._id,\n  };\n\n  return Promise.resolve(newFood);\n};\n\nexport const modifyFood = async (\n  food: Food,\n  originalFood: Food\n): Promise<Food> => {\n  const data = new FormData();\n  if (food.name !== originalFood.name) {\n    data.append(\"name\", food.name);\n  }\n  if (food.description !== originalFood.description) {\n    data.append(\"description\", food.description);\n  }\n  if (food.image !== originalFood.image) {\n    const imageData = await fetch(food.image);\n    const imageBlob = await imageData.blob();\n    data.append(\"image\", imageBlob, addNameToBlob(imageBlob, food.name));\n  }\n  if (food.visible !== originalFood.visible) {\n    data.append(\"visible\", JSON.stringify(food.visible));\n  }\n  data.append(\"days\", JSON.stringify(food.days));\n  data.append(\"id\", food.id);\n\n  const res = await axios.patch(\"/food/edit\", data);\n\n  if (res.data?.code === 409) {\n    throw new CustomError(\"Comida duplicada\", 409);\n  }\n\n  if (res.data) {\n    const { name, _id, image, description, visible, days } = res.data;\n    const modifiedFood = {\n      name,\n      id: _id,\n      image: padImage(image),\n      description,\n      visible,\n      days,\n    };\n    return Promise.resolve(modifiedFood);\n  }\n  throw new Error(\"Unknown error\");\n};\n\nexport const deleteFood = async (foodId: string): Promise<void> => {\n  const data = new URLSearchParams();\n  data.append(\"id\", foodId);\n  const res = await axios.delete(\"/food/delete\", { data });\n  console.log(res);\n};\n\nexport const deleteCategory = async (categoryId: string): Promise<void> => {\n  const data = new URLSearchParams();\n  data.append(\"id\", categoryId);\n  const res = await axios.delete(\"/category/delete\", { data });\n  console.log(res);\n};\n","C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\hooks.ts",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\landing.styles.tsx",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\menu.components.tsx",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\components\\utilities.tsx",[],"C:\\Users\\Fedes\\Desktop\\veggie-club-front\\src\\menu\\menu.styles.tsx",[],{"ruleId":"66","severity":1,"message":"67","line":5,"column":3,"nodeType":"68","messageId":"69","endLine":5,"endColumn":10},{"ruleId":"66","severity":1,"message":"70","line":6,"column":3,"nodeType":"68","messageId":"69","endLine":6,"endColumn":13},{"ruleId":"71","severity":1,"message":"72","line":20,"column":2,"nodeType":null,"endLine":20,"endColumn":2,"fix":"73"},{"ruleId":"71","severity":1,"message":"74","line":3,"column":29,"nodeType":null,"endLine":3,"endColumn":39,"fix":"75"},"@typescript-eslint/no-unused-vars","'faPhone' is defined but never used.","Identifier","unusedVar","'faEnvelope' is defined but never used.","prettier/prettier","Insert `⏎`",{"range":"76","text":"77"},"Replace `'./errors'` with `\"./errors\"`",{"range":"78","text":"79"},[352,352],"\n",[103,113],"\"./errors\""]